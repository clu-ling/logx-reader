image: openjdk:11

stages:
  - test
  - deploy

before_script:
  - apt-get update -y
  - apt-get install apt-transport-https -y
  ## Install SBT
  - echo "deb http://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
  - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823
  - apt-get -y update
  - apt-get -y install sbt
  - sbt sbtVersion

test:
  stage: test
  script:
    # - sbt clean coverage test coverageReport
    - sbt clean test
    - sbt dockerize
    #- sbt docker:publishLocal

deploy:
  tags:
    - docker
    - arizona
  stage: deploy
  # image: openjdk:11
  # before_script:
  #   - apt-get update -y
  #   - apt-get install apt-transport-https -y
  #   ## Install SBT
  #   - echo "deb http://dl.bintray.com/sbt/debian /" | tee -a /etc/apt/sources.list.d/sbt.list
  #   - apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 642AC823
  #   - apt-get update -y
  #   - apt-get install sbt -y
  #   - sbt sbtVersion
  #   - sbt docker:publishLocal
  #   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY;

  image: docker:latest
  # see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
  # see https://docs.gitlab.com/ee/api/deploy_tokens.html
  # see https://docs.gitlab.com/ee/user/project/deploy_tokens/index.html#creating-a-deploy-token
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.logx.cloud
    #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY;
  script:
    # push all tags
    - docker push gitlab-registry.logx.cloud/team/bbn/logx-reader


# TODO: deploy on OpenStack using terraform
# see https://gitlab.logx.cloud/help/ci/environments/index.md