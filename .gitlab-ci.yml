# use our custom image
image: parsertongue/ubuntu:20.04

stages:
  - test
  - deploy

variables:
  # used in conjunction with cache
  SBT_OPTS: "-Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/.ivy2"

# cache modules in between jobs
cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - "sbt-cache/.ivy2/cache"
    - "sbt-cache/boot"
    - "sbt-cache/sbtboot"
    #- "sbt-cache/coursier"

before_script:
  - sbt sbtVersion

test:
  stage: test
  image: parsertongue/ubuntu:20.04
  script:
    # - sbt clean coverage test coverageReport
    - sbt clean test

deploy:
  only:
    # only publish docker images, etc. for commits to master
    refs:
      - master
  # tags:
  #   - docker
  #   - arizona
  stage: deploy
 
  image: parsertongue/ubuntu:20.04
  # see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html
  # see https://docs.gitlab.com/ee/api/deploy_tokens.html
  # see https://docs.gitlab.com/ee/user/project/deploy_tokens/index.html#creating-a-deploy-token
  before_script:
    - sbt dockerize
    #- docker images
    #- sbt docker:publishLocal
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.logx.cloud
    #- docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY;
  script:
    # push all tags
    - docker push gitlab-registry.logx.cloud/team/bbn/logx-reader


# TODO: deploy on OpenStack using terraform
# see https://gitlab.logx.cloud/help/ci/environments/index.md