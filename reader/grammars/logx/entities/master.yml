taxonomy: org/parsertongue/reader/grammars/logx/taxonomy.yml
#taxonomy: file:///home/hahnpowell/repos/clu-ling/logx-reader/reader/grammars/logx/taxonomy.yml

vars:
  # NOTE: change pathPrefix for development
  #pathPrefix: "org/parsertongue/reader/grammars/logx"
  #pathPrefix: "file:///home/hahnpowell/repos/clu-ling/logx-reader/reader/grammars/logx"
  pathPrefix: "file:///Users/davidmedeiros/repos/clu-ling/logx-reader/reader/grammars/logx"
  wh-words-en: "how|that|what|whatever|when|whenever|where|which|who|whoever|whom|whose|why"

rules:

  #- import: ${pathPrefix}/entities/avoid.yml

######################################
# Concepts
######################################

  - name: "org-ner"
    label: Organization
    priority: 3
    example: "DoD"
    type: token
    pattern: |
      [entity="B-ORG"]
      # extant mentions should take priority
      [entity="I-ORG" & !mention=/./]* 

  - name: "loc-ner"
    label: Location
    type: token
    pattern: |
      [entity="B-LOC"]
      [entity="I-LOC"]*
      [word=/^\,$/]? 
      [word=/^[A-Z]{2}$/]?
      #last 2 lines allow for things like "Hamburg, DE"; "Tucson, AZ"

  # https://en.wikipedia.org/wiki/Twenty-foot_equivalent_unit
  - name: "units"
    label: Unit
    type: token
    pattern: |
      [lemma=/(?i)^(metric)$/]? [lemma=/(?i)^(TEU|ton|pound|kg)s?$/]

  - name: "quantity-1"
    label: Quantity
    type: token
    pattern: |
      [word=/^\d/] (?=@Unit)

  - name: "quantity-2"
    label: Quantity
    type: token
    pattern: |
      [tag=CD]

  - name: "quantifier-1"
    label: Quantifier
    type: token
    pattern: |
      [lemma=/^(many|much|few|some)$/]
      |
      [lemma=a]? [lemma=lot] of

  - name: "unspecified-port-1"
    label: UnspecifiedPort
    #keep: false
    type: token
    pattern: |
      [lemma=/(?i)^(port)$/ & tag=/^N/]

  - name: "port-1"
    label: Port
    type: token
    pattern: |
      @location:Location @trigger:Port
      |
      (?<trigger> @Port of) @location:Location
  
  # FIXME: add hasProperty?
  - name: "vessel-1"
    label: Vessel
    type: token
    pattern: |
      @Concept? [lemma=/(?i)^(vessel|freighter|ship)$/ & tag=/^N/]

  - name: "quantified-cargo"
    label: QuantifiedCargo
    type: token
    # promotes Concept -> Cargo
    # FIXME: assumes we're only quantifying cargo
    action: handleQuantifiedCargo
    pattern: |
      @unit:Unit of @concept:Concept
  
  # FIXME: introduce a more principled way of identifying cargo
  - name: "cargo"
    label: Cargo
    priority: 4
    type: token
    pattern: |
      [tag=/^N/] [lemma=cargo & !mention=Vessel]
      |
      [mention=Concept & !mention=/^(Location|Vessel)$/]* food
  
  - name: "cargo-2"
    label: Cargo
    type: token
    pattern: |
      (?<= [lemma=/(?i)^(much)$/]) [mention=Concept & !mention=/^(Location|Vessel)$/]+ (?= []{,3}? @TransportTrigger)
  
  - name: "transport-trigger-1"
    label: TransportTrigger
    type: token
    pattern: |
      [lemma=/^(head|ship|arriv|reach|redirect)/ & tag=/^VB/]
      |
      en route

  - name: "shipment-of-trigger"
    label: ShipmentOfTrigger
    type: token
    pattern: |
      [lemma=shipment] of

  - name: "shipment-of-cargo"
    label: Cargo
    type: token
    pattern: |
      (?<= @ShipmentOfTrigger) @Concept

  - name: "shipment-of"
    label: ShipmentOf
    type: token
    pattern: |
      @trigger:ShipmentOfTrigger @cargo:Cargo

  - name: "unknown-cargo"
    label: UnspecifiedCargo
    type: token
    pattern: |
      # "the cargo"
      (?<=[!tag=/^N/]) [lemma=cargo & !mention=Vessel]

    
  # - name: "concept"
  #   label: Concept
  #   type: token
  #   pattern: |
  #     [entity="B-Concept"]
  #     [entity="I-Concept"]*

  # # *ility
  # - name: "ility-concept"
  #   label: Concept
  #   type: token
  #   pattern: |
  #     [tag=/^(JJ|NN)/]* [lemma=/ility$/ & entity=O & !mention=/./]

  - import: ${pathPrefix}/entities/time-expressions.yml

  - import: ${pathPrefix}/entities/xp.yml
  
