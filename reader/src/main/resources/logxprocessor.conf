processor {
  internStrings = false

  language = "EN"

  tokenizer {
    post {
      type = "none"
    }
  }

  #org/clulab/processors/clu/pos-bimemm-l1-o2-bi10-wsjgenia.dat.gz

  # pos {
  #   model = "org/clulab/processors/clu/pos-bimemm-l1-o2-bi10-wsjgenia.dat.gz"

  #   #post {
  #   #   type = "logx"
  #   #}
  # }

  # mtl-ner = "org/clulab/processors/clu/mtl-en-ner-avg-e2e3e5e7e8"
  
  # POS & chunking
  mtl-pos-chunk-srlp = "org/clulab/processors/clu/mtl-en-pos-chunk-srlp-avg-e5e6e7"
  
  # this model relies on POS & chunking
  mtl-srla = "org/clulab/processors/clu/mtl-en-srla-conllne-avg-e16e17e20"

  ner {
    mtl-ner = "org/clulab/processors/clu/mtl-en-ner-avg-e2e3e5e7e8"

    type = "logx"

    kbs = [
      "org/parsertongue/kb/ner/hazardous-materials.tsv.gz"
    ]

    # overrides: [
    # ],

    model = "org/parsertongue/kb/ner/model.ser.gz"

    # post {
    #   type = "logx"
    # }
  }

  parser {
    universal = true # if true uses universal dependencies; otherwise Stanford
  }
}