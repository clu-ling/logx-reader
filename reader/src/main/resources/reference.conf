org.parsertongue.mr {

  # current options: "ProxiedProcessor", "CluProcessor", "logx"
  processor = "logx"
  rulesPrefix = "org/parsertongue/reader/grammars/logx"
  #rulesPrefix = "file:///reader/grammars/logx"
  rulesPrefix = ${?RULES_PREFIX}
  proxiedProcessorUrl = ${?PROCESSORS_SERVICE_URL}

  ner {
        base = "org/parsertongue/kb"
    kbConfig = ${org.parsertongue.mr.ner.base}/logx.yml
    kbRawDir = ${org.parsertongue.mr.ner.base}/raw
    kbNerDir = ${org.parsertongue.mr.ner.base}/ner

    # NB: Order is important as it indicates priority.
    kbs = [
      ${org.parsertongue.mr.ner.kbNerDir}/hazardous-materials.tsv.gz
    ]

    # File to keep track of entities that should not be labeled if they are lowercase or initial upper case.
    stopListFile = ${org.parsertongue.mr.ner.base}/stoplist.txt

    model = ${org.parsertongue.mr.ner.kbNerDir}/model.ser.gz

    # import org.parsertongue.mr.processors.logx.LogxProcessor
  }

  entities.entityFinder {
    name         = "OdinEntityFinder"
    // action instantiation handled via reflection
    actions      = "org.parsertongue.mr.actions.OdinActions"
    # FIXME: this shouldn't be required to be an action in .actions
    globalAction = "default"
    rulesPath    = ${org.parsertongue.mr.rulesPrefix}/entities/master.yml
  }

  events.eventFinder {
    name         = "OdinEventFinder"
    # action instantiation handled via reflection
    actions      = "org.parsertongue.mr.actions.OdinActions"
    # FIXME: this shouldn't be required to be an action in .actions (i.e., use reflection)
    globalAction = "cleanupEvents"
    rulesPath    = ${org.parsertongue.mr.rulesPrefix}/events/master.yml
  }

  mentionFilter {
    maxArgDistance = 20
    # entity mentions must meet or exceed this number of characters
    meetsMinLength {
      minChars    = 2
      # entities matching any of these terms will not be discarded
      exceptions = ["KEEP_ME"]
    }

  }

}
